// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace OpenHouse.Model.Core.Model
{
    public partial class person
    {
        public person()
        {
            tenancyhousehold = new HashSet<tenancyhousehold>();
            tenancyjointTenantPerson = new HashSet<tenancy>();
            tenancyleadTenantPerson = new HashSet<tenancy>();
        }

        [Key]
        [Column(TypeName = "int(11)")]
        public int personId { get; set; }
        [Column(TypeName = "varchar(100)")]
        public string firstName { get; set; }
        [Column(TypeName = "varchar(100)")]
        public string middleName { get; set; }
        [Column(TypeName = "varchar(100)")]
        public string surname { get; set; }
        [Column(TypeName = "int(11)")]
        public int? titleId { get; set; }
        [Column(TypeName = "date")]
        public DateTime? dateOfBirth { get; set; }
        [Column(TypeName = "varchar(20)")]
        public string telephone { get; set; }
        [Column(TypeName = "varchar(500)")]
        public string email { get; set; }
        [Column(TypeName = "int(11)")]
        public int? nationalityId { get; set; }
        [Column(TypeName = "varchar(100)")]
        public string nextOfKinFrstName { get; set; }
        [Column(TypeName = "varchar(100)")]
        public string nextOfKinSurname { get; set; }
        [Column(TypeName = "varchar(20)")]
        public string nextOfKinTelephone { get; set; }
        [Column(TypeName = "int(11)")]
        public int? updatedByUserID { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? updatedDT { get; set; }
        [Column(TypeName = "int(11)")]
        public int? createdByUserID { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? createdDT { get; set; }

        [ForeignKey(nameof(nationalityId))]
        [InverseProperty("person")]
        public virtual nationality nationality { get; set; }
        [ForeignKey(nameof(titleId))]
        [InverseProperty("person")]
        public virtual title title { get; set; }
        [InverseProperty("person")]
        public virtual ICollection<tenancyhousehold> tenancyhousehold { get; set; }
        [InverseProperty(nameof(tenancy.jointTenantPerson))]
        public virtual ICollection<tenancy> tenancyjointTenantPerson { get; set; }
        [InverseProperty(nameof(tenancy.leadTenantPerson))]
        public virtual ICollection<tenancy> tenancyleadTenantPerson { get; set; }
    }
}