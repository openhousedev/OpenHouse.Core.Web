@model OpenHouse.Model.Core.Model.PersonViewModel

@{
    ViewData["Title"] = "Details";
}

@section Scripts {
    <script type="text/javascript">
        //Save active tab & navigate back to on refresh
        $(document).ready(function () {
            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) { //On tab selected
                localStorage.setItem('activeTabPerson', $(e.target).attr('href')); //log selected tab to local storage
            });

            if (performance.navigation.type == 1) { //If page is refreshes or accessed via location.reload()
                console.info("This page is reloaded");

                var activeTab = localStorage.getItem('activeTabPerson'); //Retrieve active tab from local storage

                if (activeTab) {
                    $('.nav-tabs a[href="' + activeTab + '"]').tab('show'); //Select active tab
                }
            }
        });
    </script>
}

<div class="row">
    <div class="col-md-6">
        <h4>Person Details</h4>
    </div>
    <div class="col-md-6">
        <input type="button" class="btn btn-outline-primary float-right ml-1" onClick="window.open('', '_self').close();" value="Done" />
        <a class="btn btn-outline-primary float-right ml-1" asp-action="Edit" asp-route-id="@Model.personId">Edit</a>
    </div>
</div>
<hr />
<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="details-tab" data-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="audit-tab" data-toggle="tab" href="#audit" role="tab" aria-controls="audit" aria-selected="false">Audit</a>
    </li>
</ul>
<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="search-tab">
        <div class="row mt-4">
            <div class="col-md-6">
                <dl>
                    <dt class="col-sm-10">
                        Title
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.title.title1)
                    </dd>
                    <dt class="col-sm-10">
                        First name
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.firstName)
                    </dd>
                    <dt class="col-sm-10">
                        Middle name
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.middleName)
                    </dd>
                    <dt class="col-sm-10">
                        Surname
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.surname)
                    </dd>
                    <dt class="col-sm-10">
                        Date of Birth
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.dateOfBirth)
                    </dd>
                    <dt class="col-sm-10">
                        Nationality
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.nationality.nationality1)
                    </dd>
                </dl>
            </div>
            <div class="col-md-6">
                <dl>
                    <dt class="col-sm-10">
                        Telephone
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.telephone)
                    </dd>
                    <dt class="col-sm-10">
                        Email
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.email)
                    </dd>
                    <dt class="col-sm-10">
                        Next of Kin First Name
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.nextOfKinFrstName)
                    </dd>
                    <dt class="col-sm-10">
                        Next of Kin Surname
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.nextOfKinSurname)
                    </dd>
                    <dt class="col-sm-10">
                        Next of Kin Telephone
                    </dt>
                    <dd class="col-sm-10 border border border-secondary rounded mt-2">
                        @Html.DisplayFor(model => model.nextOfKinTelephone)
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="audit" role="tabpanel" aria-labelledby="audit-tab">
        <div class="row mt-3 mb-3">
            <div class="card w-100">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <dl>
                                <dt class="col-sm-10">
                                    <i class="fa fa-user"></i>&nbsp;Updated By
                                </dt>
                                <dd class="col-sm-10 border border border-secondary rounded mt-2">
                                    @Html.DisplayFor(model => model.updatedByUsername)
                                </dd>
                                <dt class="col-sm-10">
                                    <i class="fa fa-user-clock"></i>&nbsp;Last updated:
                                </dt>
                                <dd class="col-sm-10 border border border-secondary rounded mt-2">
                                    @Model.updatedDT.Value.ToString("dd/MM/yyyy hh:mm")
                                </dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl>
                                <dt class="col-sm-10">
                                    <i class="fa fa-user"></i>&nbsp;Created By:
                                </dt>
                                <dd class="col-sm-10 border border border-secondary rounded mt-2">
                                    @Html.DisplayFor(model => model.createdByUsername)
                                </dd>
                                <dt class="col-sm-10">
                                    <i class="fa fa-user-clock"></i>&nbsp;Created On:
                                </dt>
                                <dd class="col-sm-10 border border border-secondary rounded mt-2">
                                    @Model.createdDT.Value.ToString("dd/MM/yyyy hh:mm")
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
